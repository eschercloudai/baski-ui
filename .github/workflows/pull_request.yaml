name: Validate on Pull Request

on:
  workflow_dispatch:
  pull_request:
    types: [ opened, reopened, edited ]

jobs:
  lint-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: 'npm'

      - name: Run node lint
        run: |
          npm install
          npm run lint

  lint-chart:
    runs-on: ubuntu-latest
    needs: lint-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v3

      - uses: actions/setup-python@v4

      - name: Install chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart lint
        run: ct lint --all --config .github/ct.yaml

  lint-chart-docs:
    runs-on: ubuntu-latest
    needs: lint-chart
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Run helm-docs
        run: .github/helm-docs.sh

  kubeconform-chart:
    runs-on: ubuntu-latest
    needs:
      - lint-chart-docs
    strategy:
      matrix:
        k8s:
          # from https://github.com/yannh/kubernetes-json-schema
          - v1.26.9
          - v1.27.8
          - v1.28.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Run kubeconform
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
        run: .github/kubeconform.sh

  security-checks:
    runs-on: ubuntu-22.04
    needs: kubeconform-chart
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Build Local Container
        uses: eschercloudai/container-security-action@v0.0.4
        if: github.event_name != 'pull_request'
        with:
          image-repo: ghcr.io
          repo-username: ${{ github.repository_owner }}
          repo-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: baski-ui
          image-tag: ${{ github.ref_name }}
          check-severity: CRITICAL
          trivyignore-from-s3: true
          aws-endpoint: "https://nl1.eschercloud.com:6780"
          aws-access-key: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-key: ${{secrets.AWS_SECRET_KEY}}
          s3-bucket: "trivyignores"
          s3-path: "baski-ui"
          fail-build: false
          add-latest-tag: false
          publish-image: false
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: false
          dockerfile-path: .
